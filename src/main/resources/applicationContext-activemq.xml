<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
     	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     	http://www.springframework.org/schema/jms 
     	http://www.springframework.org/schema/jms/spring-jms-2.5.xsd">

	<context:annotation-config />
	<context:component-scan base-package="org.rency.mq"/>
	
	<bean id="jmsExceptionListener" class="org.rency.mq.listener.JmsExceptionListener" />
	
	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${jms.url}" />
		<property name="userName" value="${jms.username}" />
		<property name="password" value="${jms.password}" />
		<property name="useAsyncSend" value="true" />
		<property name="exceptionListener" ref="jmsExceptionListener" />
	</bean>
	
	<bean id="poolConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="10" />
	</bean>
	
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="poolConnectionFactory" />
	</bean>
	
	<!-- 定义消息目标 -->
	<bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="${jms.destination}" />
	</bean>
	
	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
   		<constructor-arg ref="connectionFactory"/>
   		<property name="defaultDestination" ref="destination" />
   		<property name="pubSubDomain" value="false" /><!-- 是否为订阅发布者模式 -->
	</bean>
	
	<!-- 消息监听容器 -->
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="destination" />
		<property name="sessionTransacted" value="true" /><!-- 事务管理 -->
		<!-- <property name="messageListener" ref="consumerListener" /> -->		
	</bean>

</beans>